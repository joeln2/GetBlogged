{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Joel-projects\\\\Blogify-main\\\\Blogify-main\\\\new-client\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport default function RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function register(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    if (response.status === 200) {\n      alert('registration succesful');\n    } else {\n      alert('register failed');\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"register\",\n    onSubmit: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    value: username,\n    onChange: ev => setUsername(ev.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    value: password,\n    onChange: ev => setPassword(ev.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Register\"));\n}\n_s(RegisterPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","RegisterPage","_s","username","setUsername","password","setPassword","register","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","alert","React","createElement","className","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Joel-projects/Blogify-main/Blogify-main/new-client/src/pages/RegisterPage.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function RegisterPage(){\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    async function register(ev){\n      ev.preventDefault();\n      const response = await fetch('http://localhost:4000/register', {\n        method: \"POST\",\n        body: JSON.stringify({username, password}),\n        headers: {'Content-type': 'application/json'},\n      });\n      if(response.status === 200){\n        alert('registration succesful');\n      }\n      else{\n        alert('register failed');\n      }\n  }\n    return(\n      <form className=\"register\" onSubmit={register}>\n        <h1>Register</h1>\n          <input type=\"text\"\n           placeholder=\"username\"\n           value={username}\n           onChange={ev=> setUsername(ev.target.value)}/>\n          <input type=\"password\" \n           placeholder=\"password\"\n           value={password}\n           onChange={ev=> setPassword(ev.target.value)}/>\n          <button>Register</button>\n      </form>\n    );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,eAAe,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,eAAeO,QAAQA,CAACC,EAAE,EAAC;IACzBA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACZ,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC1CW,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAC9C,CAAC,CAAC;IACF,IAAGN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;MACzBC,KAAK,CAAC,wBAAwB,CAAC;IACjC,CAAC,MACG;MACFA,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACJ;EACE,oBACEC,KAAA,CAAAC,aAAA;IAAMC,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEf,QAAS;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5CT,KAAA,CAAAC,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACfT,KAAA,CAAAC,aAAA;IAAOS,IAAI,EAAC,MAAM;IACjBC,WAAW,EAAC,UAAU;IACtBC,KAAK,EAAE5B,QAAS;IAChB6B,QAAQ,EAAExB,EAAE,IAAGJ,WAAW,CAACI,EAAE,CAACyB,MAAM,CAACF,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eAC/CT,KAAA,CAAAC,aAAA;IAAOS,IAAI,EAAC,UAAU;IACrBC,WAAW,EAAC,UAAU;IACtBC,KAAK,EAAE1B,QAAS;IAChB2B,QAAQ,EAAExB,EAAE,IAAGF,WAAW,CAACE,EAAE,CAACyB,MAAM,CAACF,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eAC/CT,KAAA,CAAAC,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,UAAgB,CACtB,CAAC;AAEb;AAAC1B,EAAA,CA/BuBD,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}